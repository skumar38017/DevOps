networks:
  redis-cluster:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

services:
  redis-node-1:
    container_name: redis-node-1
    image: ${REDIS_DB_IMAGE}
    networks:
      - redis-cluster
    volumes:
      - ${PWD}/storage/redis_node_1:/data:rw
      - ${PWD}/storage/redis_cart_data/redis.conf:/tmp/redis.conf:ro
    environment:
      - REDIS_USERNAME=${REDIS_DB_USERNAME}
      - REDIS_PASSWORD=${REDIS_DB_PASSWORD}
      - PORT=${REDIS_NODE_1_PORT}
    command: |
      sh -c '
        apk add --no-cache gettext &&
        rm -rf /data/redis.conf &&
        envsubst < /tmp/redis.conf > /data/redis.conf &&
        redis-server /data/redis.conf --port ${REDIS_NODE_1_PORT}
      '
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "${REDIS_NODE_1_PORT}", "-a", "${REDIS_DB_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  redis-node-2:
    container_name: redis-node-2
    image: ${REDIS_DB_IMAGE}
    networks:
      - redis-cluster
    volumes:
      - ${PWD}/storage/redis_node_2:/data:rw
      - ${PWD}/storage/redis_cart_data/redis.conf:/tmp/redis.conf:ro
    environment:
      - REDIS_USERNAME=${REDIS_DB_USERNAME}
      - REDIS_PASSWORD=${REDIS_DB_PASSWORD}
      - PORT=${REDIS_NODE_2_PORT}
    command: |
      sh -c '
        apk add --no-cache gettext &&
        rm -rf /data/redis.conf &&
        envsubst < /tmp/redis.conf > /data/redis.conf &&
        redis-server /data/redis.conf --port ${REDIS_NODE_2_PORT}
      '
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "${REDIS_NODE_2_PORT}", "-a", "${REDIS_DB_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  redis-node-3:
    container_name: redis-node-3
    image: ${REDIS_DB_IMAGE}
    networks:
      - redis-cluster
    volumes:
      - ${PWD}/storage/redis_node_3:/data:rw
      - ${PWD}/storage/redis_cart_data/redis.conf:/tmp/redis.conf:ro
    environment:
      - REDIS_USERNAME=${REDIS_DB_USERNAME}
      - REDIS_PASSWORD=${REDIS_DB_PASSWORD}
      - PORT=${REDIS_NODE_3_PORT}
    command: |
      sh -c '
        apk add --no-cache gettext &&
        rm -rf /data/redis.conf &&
        envsubst < /tmp/redis.conf > /data/redis.conf &&
        redis-server /data/redis.conf --port ${REDIS_NODE_3_PORT}
      '
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "${REDIS_NODE_3_PORT}", "-a", "${REDIS_DB_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    
  redis-node-4:
    container_name: redis-node-4
    image: ${REDIS_DB_IMAGE}
    networks:
      - redis-cluster
    volumes:
      - ${PWD}/storage/redis_node_4:/data:rw
      - ${PWD}/storage/redis_cart_data/redis.conf:/tmp/redis.conf:ro
    environment:
      - REDIS_USERNAME=${REDIS_DB_USERNAME}
      - REDIS_PASSWORD=${REDIS_DB_PASSWORD}
      - PORT=${REDIS_NODE_4_PORT}
    command: |
      sh -c '
        apk add --no-cache gettext &&
        rm -rf /data/redis.conf &&
        envsubst < /tmp/redis.conf > /data/redis.conf &&
        redis-server /data/redis.conf --port ${REDIS_NODE_4_PORT}
      '
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "${REDIS_NODE_4_PORT}", "-a", "${REDIS_DB_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  redis-node-5:
    container_name: redis-node-5
    image: ${REDIS_DB_IMAGE}
    networks:
      - redis-cluster
    volumes:
      - ${PWD}/storage/redis_node_5:/data:rw
      - ${PWD}/storage/redis_cart_data/redis.conf:/tmp/redis.conf:ro
    environment:
      - REDIS_USERNAME=${REDIS_DB_USERNAME}
      - REDIS_PASSWORD=${REDIS_DB_PASSWORD}
      - PORT=${REDIS_NODE_5_PORT}
    command: |
      sh -c '
        apk add --no-cache gettext &&
        rm -rf /data/redis.conf &&
        envsubst < /tmp/redis.conf > /data/redis.conf &&
        redis-server /data/redis.conf --port ${REDIS_NODE_5_PORT}
      '
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "${REDIS_NODE_5_PORT}", "-a", "${REDIS_DB_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  nginx-proxy:
    image: nginx:1.24-alpine
    container_name: nginx-redis-proxy
    volumes:
      - ${PWD}/storage/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${PWD}/storage/nginx/ssl:/etc/nginx/ssl:ro
      - ${PWD}/storage/nginx/logs:/var/log/nginx:rw
      - ${PWD}/storage/nginx/empty.conf:/etc/nginx/conf.d/default.conf
      - ${PWD}/storage/nginx/nginx_data/logs:/var/log/nginx
    restart: unless-stopped
    depends_on:
      redis-node-1:
        condition: service_healthy
      redis-node-2:
        condition: service_healthy
      redis-node-3:
        condition: service_healthy
      redis-node-4:
        condition: service_healthy
      redis-node-5:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - redis-cluster
